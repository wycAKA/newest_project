import type { NextApiRequest, NextApiResponse } from "next";
import axios from "axios";

type ResponseData = {
  completion: string;
  suggestions?: string[];
  error?: string;
};

export default async function handler(
  req: NextApiRequest,
  res: NextApiResponse<ResponseData>
) {
  if (req.method !== "POST") {
    res.status(405).json({ completion: "", error: "Method not allowed" });
    return;
  }

  const { prompt, isFirstQuestion } = req.body;

  if (!prompt) {
    res.status(400).json({ completion: "", error: "Prompt is required" });
    return;
  }

  try {
    // 初回かどうかでAPIキーを切り替え
    const apiKey = isFirstQuestion
      ? process.env.ANTHROPIC_API_KEY_FIRST
      : process.env.ANTHROPIC_API_KEY_SECOND;

    if (!apiKey) {
      throw new Error("APIキーが設定されていません");
    }

    const response = await axios.post(
      "https://api.anthropic.com/v1/complete",
      {
        prompt: `\n\nHuman: ${prompt}\n\nAssistant:`,
        model: "claude-3-5",
        max_tokens_to_sample: 500,
        temperature: 0.7,
      },
      {
        headers: {
          "Content-Type": "application/json",
          "X-API-Key": apiKey,
        },
      }
    );

    // レスポンスから必要なデータを抽出
    const content = response.data.content[0].text; // JSON文字列として取得
    const parsedContent = JSON.parse(content); // JSONとしてパース

    // 必要な情報を抽出
    const assistantResponse = parsedContent.response.answer; // 回答
    const suggestions = [
      parsedContent.suggestion_list.suggestion1,
      parsedContent.suggestion_list.suggestion2,
      parsedContent.suggestion_list.suggestion3,
    ];

    res.status(200).json({ completion: assistantResponse, suggestions });
  } catch (error: any) {
    console.error("Error calling Claude API:", error);
    res.status(500).json({
      completion: "",
      error: error.message || "Something went wrong",
    });
  }
}
